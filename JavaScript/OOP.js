

/* МИФЫ, НАСЛЕДОВАНИЕ, ПОЛИМОРФИЗМ, АБСТРАКЦИИ, НАСЛЕДОВАНИЕ - https://www.youtube.com/watch?v=ZmH262CgLsM&list=PLM7wFzahDYnHyRpmcSGOptXan08CNb9nh&index=3 */


/* ООП - это всего лишь инструмент, который нужно использовать только в проектах, где он нужен, а не всегда и везде. */

/* ООП появилось, т.к программы стали гораздо сложнее, а модульность использовать довольно трудно.
Неправильное ООП гораздно хуже неправильного процедурного программирования. */

/* Процесс ООП происходит так: абстрогируем ненужное, и оставляем только нужное, т.е создаём модель. 
Оставленные важные параметры в будущем станут свойствами.
Потом нужно выявлять, какие действия можно выполнять с этой моделью, т.е закладываем основы методов. 
Пример модели пользователя: user(username, password, email). И методы этой модели: login(), logout(). 
Разработка модели (абстракции) очень важная составляющая ООП, 
и если она построена не правильно или переданы неправильные свойства/методы, то весь код придеться рефакторить. */

/* Наследование, это можно сказать расширение. 
Например, у нас есть модель admin, который имеет всё тоже самое, что и user, но ещё некоторые свои функции. 
И тогда admin будет наследовать все методы, свойства у user, но и иметь некоторое своё. 
Т.е он расширяет функционал модели user. */

/* ООП строиться на правильном понимании модели с чем вы работаете. */

/* Полиморфизм в ООП, это когда один и тот же метод/свойство под одним и тем же именем будет меняться в зависимости от сущности.
Например, у нас есть метод getCourses() у модели user и от этой модели наследуется модель admin, которая наследует и метод getCourses().
Поэтому, мы можем перезаписать метод getCourses() в модели admin и она будет работать по-своему только в этой модели. */

/* Инкапсуляция в ООП это скрытие реализации какой-либо задачи в JavaScript коде не из вредности, а с целью защиты части кода от пользователя или программиста.
Например, у нас есть модель course и у него свойство price. 
И мы можем инкапсулировать свойство price, 
для того чтобы какой-нибудь случайный программист не смог его как-либо изменить, а то это поломает всю экономику сайта.
Программист имеет возможность просматривать инкапсулированное свойство/метод, но не использовать его. */


/* ОБЪЕКТЫ, ПРОТОТИПЫ, НАСЛЕДОВАНИЕ - https://www.youtube.com/watch?v=rWfZAeEnn2I&list=PLM7wFzahDYnHyRpmcSGOptXan08CNb9nh&index=3 */


