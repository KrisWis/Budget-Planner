body {
  margin: 0;
  padding: 0;
  text-decoration: none;
  font-family: 'Montserrat', sans-serif;
}

.caption {
  color: white;
  font-size: 30px;
  margin-bottom: 100px;
  position: relative;
  top: 5%;
}

/* ОРИГИНАЛЬНЫЙ HOVER-ЭФФЕКТ КНОПКИ. https://www.youtube.com/watch?v=qYkqQCohfAc&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI */


$accent-color: #07e8ff;
$base-color: #2f0000;
$border-size: 3px;

.wrapper1 {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100vh;
  background: linear-gradient(45deg, #3c0453, $base-color);
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.wrapper1 button {
  text-transform: uppercase;
  text-shadow: 0 0 15px #000;
  letter-spacing: 15px;
  font-size: 100px;
  color: $accent-color;
  padding: 5% 10%;
  border: none;
  background-color: transparent;
  cursor: pointer;
  box-shadow: 0 30px 50px rgba(0, 0, 0, .8);
  position: relative;
  overflow: hidden;

  /* Затемнённая половина кнопки. */

  &:before {
    content: "";
    position: absolute;
    top: $border-size;
    left: $border-size;
    bottom: $border-size;
    width: 50%;
    background-color: rgba(255, 255, 255, .05);
  }

  span {

    &:nth-child(1),
    &:nth-child(2),
    &:nth-child(3),
    &:nth-child(4) {
      position: absolute;
      opacity: 0;
      transition: all .3s linear;
    }

    /* Верхняя линия */

    &:nth-child(1) {
      top: 0;
      left: 0;
      width: 100%;
      height: $border-size;
      background: linear-gradient(90deg, $base-color, $accent-color, $base-color);
      animation: animateTop 2s linear infinite;
    }

    /* Правая линия */

    &:nth-child(2) {
      top: 0;
      right: 0;
      width: $border-size;
      height: 100%;
      background: linear-gradient(0, $base-color, $accent-color, $base-color);
      animation: animateRight 2s linear infinite;
    }

    /* Нижняя линия */

    &:nth-child(3) {
      bottom: 0;
      left: 0;
      width: 100%;
      height: $border-size;
      background: linear-gradient(90deg, $base-color, $accent-color, $base-color);
      animation: animateBottom 2s linear infinite;
    }

    /* Левая линия */

    &:nth-child(4) {
      top: 0;
      left: 0;
      width: $border-size;
      height: 100%;
      background: linear-gradient(0, $base-color, $accent-color, $base-color);
      animation: animateLeft 2s linear infinite;
    }
  }

  &:hover {
    span {

      &:nth-child(1),
      &:nth-child(2),
      &:nth-child(3),
      &:nth-child(4) {
        opacity: 1;
      }
    }
  }
}

@keyframes animateTop {
  0% {
    /* translate () Сдвигает элемент на заданное значение по горизонтали и вертикали в плоскости экрана. */
    transform: translateX(-100%)
  }

  100% {
    transform: translateX(100%);
  }
}

@keyframes animateRight {
  0% {
    transform: translateY(-100%)
  }

  100% {
    transform: translateY(100%);
  }
}

@keyframes animateBottom {
  0% {
    transform: translateX(100%)
  }

  100% {
    transform: translateX(-100%);
  }
}

@keyframes animateLeft {
  0% {
    transform: translateY(100%)
  }

  100% {
    transform: translateY(-100%);
  }
}


/* АНИМАЦИЯ 3D ПЕРЕВОРОТА КАРТОЧКИ. https://www.youtube.com/watch?v=l7UbiJwE9mc&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=2 */


.wrapper2 {
  background: linear-gradient(10deg, rgb(85, 8, 85), black);
  height: 100vh;
  text-align: center;
}

.card {
  width: 340px;
  height: 320px;
  cursor: pointer;
  position: absolute;
  left: 50%;
  transform: translate(-50%, 50%);

  &:hover {
    .front {
      /* При наведении, поворачиваем элемент на 180 градусов, чтобы этот элемент был повёрнут к пользователю задом, 
      а мы сделали backface-visibility: hidden, поэтому элемент не будет виден. 
      Поставлено "-180deg", а не просто "180deg", чтобы при повороте back элемента они не перекрещивались. */
      transform: perspective(600px) rotateY(-180deg);
    }

    /* При наведении, поварачиваем задний элемент нам передом, чтобы мы его видели. */
    .back {
      transform: perspective(600px) rotateY(0);
    }
  }
}

.front,
.back {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: absolute;
  /* Свойство backface-visibility определяет, должна ли быть видна задняя поверхность элемента, когда он обращен к пользователю. 
  Задняя поверхность элемента является зеркальным отражением отображаемой передней поверхности. 
  Оно позволяет выбрать, должен ли пользователь видеть заднюю поверхность или нет. */
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  transition: transform .5s ease;
  border-radius: 10px;
  background: linear-gradient(90deg, rgb(85, 8, 85), black);
}

.front {
  /* Свойство perspective определяет на сколько элемент удален от точки обзора. 
  Чем больше значение, указанное для перспективы, тем дальше от пользователя расположен элемент. 
  Но на самом деле, оно здесь почему то не влияет на то, как мы видим элемент, скорей всего автор ошибся. */
  transform: perspective(600px) rotateY(0);

  img {
    width: 100%;
    height: auto;
  }
}

.back {
  /* Делаем переворот 180 градусов сразу, чтобы этот элемент был повёрнут к пользователю задом, 
  а мы сделали backface-visibility: hidden, поэтому элемент не будет виден. */
  transform: perspective(600px) rotateY(180deg);
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;

  h1 {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: rgb(110, 40, 144);
    font-size: 24px;

    span {
      display: flex;
      font-size: 18px;
      font-weight: 800;
      margin: 5px 0 10px;
      justify-content: baseline;
      align-items: baseline;
      gap: 5px;

      span {
        color: rgb(56, 8, 81);
      }
    }
  }

  .socials {
    list-style: none;
    display: flex;
    justify-content: space-between;

    a {
      color: rgb(91, 23, 128);
      display: inline-flex;
      width: 40px;
      height: 40px;
      /* Выравниваем иконки, которые находятся в тегах <a> по центру */
      justify-content: center;
      align-items: center;
      font-size: 22px;
      border-radius: 50%;
      transition: .4s ease;

      &:hover {
        background-color: rgb(91, 23, 128);
        color: rgb(167, 0, 250);

      }
    }
  }
}


/* КАРТОЧКИ СО СКОШЕННЫМ ДИЗАЙНОМ. https://www.youtube.com/watch?v=1JYPSI1ZDBc&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=3&pp=iAQB */


.wrapper3 {
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  min-height: 100vh;
  background: linear-gradient(#000, #01042d);
  font-family: 'Titillium Web', sans-serif;
  /* z-index нужен для того, чтобы background корректно отображался, так как теперь wrapper3 формирует новый контекст позиционирования. */
  position: relative;
  z-index: 0;
}

.container3 {
  position: relative;
  display: flex;
  justify-content: space-around;
  gap: 100px;
}

.content {
  position: relative;
  padding: 20px;
  color: #fff;

  h2 {
    position: absolute;
    top: -60px;
    right: 20px;
    margin: 0;
    padding: 0;
    font-size: 160px;
    line-height: 1.2;
    color: rgba(255, 255, 255, .06);
    transition: 0.5s;
  }

  h3 {
    margin: 0 0 10px;
    font-size: 24px;
    letter-spacing: 2px;
    font-weight: 700;
  }

  p {
    margin: 0;
    font-size: 14px;
    letter-spacing: 2px;
    line-height: 1.2;
  }

  button {
    cursor: pointer;
    position: relative;
    margin: 20px 0 0;
    padding: 10px 20px;
    background-color: transparent;
    border: 1px solid #fff;
    color: #fff;
    transition: .5s;
    transform: translateY(-40px);
    opacity: 0;
    visibility: hidden;
    text-transform: uppercase;
    font-size: 12px;
    z-index: 1;

    &:hover {
      color: #000;
      background-color: #fff;
    }
  }
}

.box3 {
  width: 300px;
  min-height: 450px;
  cursor: pointer;
  position: relative;
  background-color: #040a20;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  border: 1px solid rgba(0, 0, 0, .5);

  /* Сдвиг при наведении */

  &:hover {
    .content {
      h2 {
        top: -120px;
      }

      button {
        transform: translateY(0);
        opacity: 1;
        visibility: visible;
      }
    }
  }

  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 50%;
    height: 100%;
    background-color: rgba(255, 255, 255, .06);
  }

  &::before {
    content: "";
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    /* skew() трансформирует элемент, наклоняя его в 2D-пространстве. */
    transform: skew(2deg, 2deg);
    z-index: -1;
  }

  &:nth-child(1) {
    &:before {
      background: linear-gradient(#ff0000, #0037ff);
    }
  }

  &:nth-child(2) {
    &:before {
      background: linear-gradient(#d3ff00, #17f4ff);
    }
  }

  &:nth-child(3) {
    &:before {
      background: linear-gradient(#af36ff, #ff0070);
    }
  }
}


/* КНОПКИ СОЦИАЛЬНЫХ СЕТЕЙ С КРЕАТИВНЫМ HOVER-ЭФФЕКТОМ. https://www.youtube.com/watch?v=IqMBPjwg8nM&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=4 */


.wrapper4 {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: linear-gradient(45deg, #ee0979, #ff6a00);
}

.container4 {
  display: flex;
  list-style: none;

  li {
    margin: 10px;
  }

  a {
    text-decoration: none;
    background-color: #f1f1f1;
    color: #ff2626;
    width: 100px;
    height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 30%;
    box-shadow: -5px 5px 20px -5px #010101;
    position: relative;
    overflow: hidden;

    i {
      font-size: 34px;
      transition: .3s ease;
    }

    /* Создаём штуку, которая будет покрывать элемент при наведении */
    &:before {
      content: '';
      position: absolute;
      width: 120%;
      height: 120%;
      background-color: #ff2626;
      left: -110%;
      top: 90%;
      /* Поворачиваем её на 45 градусов, чтобы лучше выглядела */
      transform: rotate(45deg);
    }

    &:hover {

      /* Увеличиваем иконку и меняем её цвет при наведении */
      i {
        transform: scale(1.3);
        color: #f1f1f1;
      }

      &::before {
        animation-name: hover;
        animation-duration: .6s;
        top: -10%;
        left: -10%;
      }
    }
  }
}

@keyframes hover {

  /* Сначала позиция таже, что и изначально */
  0% {
    top: -110%;
    left: 90%;
  }

  /* Потом позиционируем элемент ниже и правее */
  50% {
    top: 10%;
    left: -30%;
  }

  /* И чтобы красный фон полностью заполнил элемент позициионируем ещё раз */
  100% {
    top: -10%;
    left: -10%;
  }
}


/* КНОПКA С НЕОНОВЫМ СВЕТОМ. https://www.youtube.com/watch?v=iha5Z6qv8xs&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=5 */


$border: 5px;
$dark: #333;
$neon: #1bffff;

.wrapper5 {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background: linear-gradient(45deg, $dark, #5a5454);
}

.wrapper5 button {
  font-family: "Gochi Hand", cursive;
  position: relative;
  color: $neon;
  text-transform: uppercase;
  background-color: transparent;
  font-size: 100px;
  letter-spacing: 3px;
  overflow: hidden;
  padding: 5% 10%;
  cursor: pointer;
  border: none;
  transition: .6s ease;

  &:hover {
    color: $dark;
    background-color: $neon;
    transition-delay: .5s;
    box-shadow: 0 0 10px $neon, 0 0 40px $neon, 0 0 80px $neon;

    span {
      &:nth-child(1) {
        left: 100%;
      }

      &:nth-child(2) {
        top: 100%;
      }

      &:nth-child(3) {
        right: 100%;
      }

      &:nth-child(4) {
        bottom: 100%;
      }
    }
  }

  span {
    display: block;
    position: absolute;
    transition: .6s ease;

    &:nth-child(1) {
      top: 0;
      left: -100%;
      width: 100%;
      height: $border;
      background: linear-gradient(90deg, transparent, $neon);
      transition-delay: .25s;
    }

    &:nth-child(2) {
      top: -100%;
      right: 0;
      width: $border;
      height: 100%;
      background: linear-gradient(180deg, transparent, $neon);
    }

    &:nth-child(3) {
      bottom: 0;
      right: -100%;
      width: 100%;
      height: $border;
      background: linear-gradient(270deg, transparent, $neon);
      transition-delay: .25s;
    }

    &:nth-child(4) {
      bottom: -100%;
      left: 0;
      width: $border;
      height: 100%;
      background: linear-gradient(0, transparent, $neon);
    }
  }
}


/* МИНИМАЛИСТИЧНАЯ СТРАНИЦА ОШИБКИ. https://www.youtube.com/watch?v=32GwTL-8yXQ&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=6 */


.wrapper6 {
  margin: 0;
  padding: 0;
  height: 100vh;
  font-family: 'Montserrat', sans-serif;
  background: linear-gradient(80deg, violet, black, black);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.container6 {
  display: flex;
  flex-direction: column;
  text-align: center;

  h2 {
    margin: 10px 0;

    span {
      color: rgb(34, 2, 47);
    }
  }

  h1 {
    margin: 0;
    font-size: 170px;
    letter-spacing: 20px;
    /* Задаём background изображением */
    background: url(logo.png) center;
    background-size: contain;
    /* Свойство -webkit-text-fill-color равносильно свойству color для текста. Т.е просто меняет цвет текста */
    -webkit-text-fill-color: transparent;
    /* Свойство background-clip определяет, где простирается фон элемента, в нашем случае - за текстом. */
    background-clip: text;
    -webkit-background-clip: text;
  }

  p {
    font-size: 20px;

    span {
      color: rgb(54, 4, 75);
    }
  }

  a {
    display: inline-block;
    text-decoration: none;
    color: black;
    text-transform: uppercase;
    padding: 3% 6%;
    border-radius: 20px;
    font-size: 14px;
    transition: all 0.6s ease;
    position: relative;
    z-index: 0;

    /* Создаём 2 псевдоэлемента и в каждом задаём свойство background cо своими значениями.
    У after свойство opacity равно 0, поэтому виден только before.
    А при наведении, after делаем opacity: 1, а before делаем opacity: 0, чтобы был виден только фон after. */
    &:before {
      content: "";
      display: block;
      position: absolute;
      border-radius: 20px;
      width: 100%;
      height: 100%;
      background: linear-gradient(45deg, violet, black, black);
      z-index: -1;
      left: .5%;
      bottom: 5%;
      transition: all 0.6s ease;
    }

    &:after {
      content: "";
      display: block;
      position: absolute;
      border-radius: 20px;
      width: 100%;
      height: 100%;
      background: linear-gradient(45deg, black, black, violet);
      z-index: -1;
      left: .5%;
      bottom: 5%;
      opacity: 0;
      transition: all 0.6s ease;
    }

    span {
      color: rgb(54, 4, 75);
    }

    &:hover {

      color: rgb(54, 4, 75);

      span {
        color: black;
      }

      &:before {
        opacity: 0;
      }

      &:after {
        opacity: 1;
      }
    }
  }
}


/* ОТЗЫВЧИВОЕ МЕНЮ НАВИГАЦИИ. https://www.youtube.com/watch?v=z-3hnHn6V5w&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI */


.wrapper7 {
  margin: 0;
  padding: 0;
  font-family: 'Montserrat', sans-serif;
  color: #fff;
  background: #f4f5f8;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.wrapper7 .caption {
  text-align: center;
  color: black;
}

header {
  min-height: 100px;
  background: linear-gradient(-45deg, #00537e, #3aa17e);
  padding: 0 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  box-shadow: 0 4px 4px 0 rgba(0, 0, 0, .2);

  /* Уносим switcher за пределы экрана, чтобы пользователь его не видел */
  .switcher {
    position: absolute;
    visibility: hidden;
    left: -9999px;
  }

  label {
    font-size: 30px;
    cursor: pointer;
    display: none;
  }

  ul {
    list-style-type: none;
    display: flex;
  }

  a {
    display: block;
    text-transform: uppercase;
    text-decoration: none;
    padding: 0 15px;
    color: white;
    transition: .45s;

    &:hover {
      color: #3498db;
    }
  }
}

@media screen and (max-width: 800px) {

  /* Делаем так чтобы иконки открытия и закрытия были видны */
  .open,
  .close {
    display: block;
  }

  /* Закрывающая иконка находиться выше */
  .close {
    position: absolute;
    top: 40px;
    right: 40px;
  }

  /* Селектор :checked представляет любой элемент radio, checkbox или option, который отмечен или переведен в on состояние. */
  /* Знак "~" работает так, что стили применяются ко всем nav, которые идут за .switcher:checked. */
  /* Следующие 2 строчки отвечает за то, чтобы панель навигации выдвигалась по нажатию на switcher.
  Так как, изначально у неё стоит right: -100% и она не видна пользователю, то делаем right: 0. */
  .switcher:checked~nav {
    right: 0;
  }

  /* Создаём панель навигации но убираем её вправо на 100%, чтобы пользователь не мог её видеть*/
  nav {
    position: fixed;
    width: 100%;
    height: 100vh;
    background: linear-gradient(180deg, #00537e, #3aa17e);
    right: -100%;
    top: 0;
    text-align: center;
    padding: 100px 0;
    transition: .7s;
  }

  ul {
    flex-direction: column;

    a {
      padding: 20px;

      &:hover {
        background-color: rgba(255, 255, 255, .03);
      }
    }
  }
}


/* АНИМИРОВАННЫЙ ИНДИКАТОР ВЫПОЛНЕНИЯ. https://www.youtube.com/watch?v=z-jJrClQXRQ&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=8 */


.wrapper8 {
  background: linear-gradient(45deg, #93278f, #00a99d);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  min-height: 100vh;
  font-family: 'Montserrat', sans-serif;
  padding: 0 200px;
}

.progress {
  cursor: pointer;
  background-color: #111;
  height: 40px;
  width: 70%;
  border-radius: 5px;
  position: relative;
  margin-bottom: 70px;
  padding: 6px;

  &:hover {

    /* При наведении, начинаем анимацию */
    .fill {
      animation-play-state: running;
    }

    /* А число поднимаем выше. */
    .number {
      transform: translateY(-40px);
      visibility: visible;
      opacity: 1;
    }
  }

  .fill {
    /* Ширина определяет то, на сколько процентов заполнен прогресс бар */
    width: 50%;
    /* В свойстве background чередуются цвета, которые использованы в прогресс баре. 
    Количество градусов определяет наклон палочек. 
    Настройка градиента идёт снизу вверх и указываем два цвета с одинаковыми процентами, чтобы они чередовались. */
    background: linear-gradient(45deg,
        rgba(218, 9, 218, 0.5) 25%,
        black 25%,
        black 50%,
        rgba(218, 9, 218, 0.5) 50%,
        rgba(218, 9, 218, 0.5) 75%,
        black 75%);
    background-size: 40px;
    border-radius: 5px;
    height: 100%;
    animation: move .5s linear infinite paused;
  }

  .number {
    position: absolute;
    right: 0;
    top: 0;
    background-color: rgba(255, 255, 255, .6);
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 18px;
    transition: .3s ease;
    visibility: hidden;
    opacity: 0;
  }
}

/* Анимация для движения прогресс бара */
@keyframes move {
  100% {
    background-position: 40px 0;
  }
}


/* АНИМАЦИЯ 3D ВРАЩЕНИЯ. https://www.youtube.com/watch?v=LKI-i_J79EQ&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=9 */


.wrapper9 {
  margin: 0;
  padding: 0;
  background: linear-gradient(45deg, #009245, #fcee21);
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.spinner {
  /* Свойство perspective определяет на сколько элемент удален от точки обзора. 
  Чем больше значение, указанное для перспективы, тем дальше от пользователя расположен элемент. 
  Но на самом деле, оно здесь почему то не влияет на то, как мы видим элемент, скорей всего автор ошибся. */
  perspective: 1000px;
  -webkit-perspective: 1000px;

  .circle,
  .line {
    width: 260px;
    height: 260px;
    border: 5px solid white;
    border-radius: 50%;
  }

  .circle {
    position: relative;
    /* Свойство transform-style определяет, будут ли дочерние элементы элемента расположены в трехмерном пространстве или будут сглажены в плоскости элемента. 
    У нас - в трёхмерном и создаётся некая иллюзия, что полосок много, но на самом деле их 4. */
    transform-style: preserve-3d;
    -webkit-transform-style: preserve-3d;
    animation: spinn 6s infinite linear;
  }

  .line {
    display: block;
    position: absolute;
    top: -5px;
    right: 0;
    bottom: 0;
    left: -5px;

    &:nth-child(1) {
      transform: rotateY(36deg);
    }

    &:nth-child(2) {
      transform: rotateY(72deg);
    }

    &:nth-child(3) {
      transform: rotateY(108deg);
    }

    &:nth-child(4) {
      transform: rotateY(144deg);
    }
  }
}

@keyframes spinn {
  100% {
    transform: rotateY(360deg) rotateZ(360deg);
  }
}


/* АНИМИРОВАННЫЙ ТЕКСТ ЗАГРУЗКИ. https://www.youtube.com/watch?v=ITYNnrDSk68&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=10 */


.wrapper10 {
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  min-height: 100vh;
  background: linear-gradient(45deg, #333333, #4c4a4a);
}

.wrapper10 h1 {
  font-family: 'Lato', sans-serif;
  position: relative;
  color: #212121;
  font-size: 150px;
  letter-spacing: 5px;
  text-transform: uppercase;
  border-bottom: 18px solid #212121;

  &:before {
    content: "Loading...";
    position: absolute;
    top: 0;
    left: 0;
    color: #00ffff;
    border-bottom: 18px solid #00ffff;
    overflow: hidden;
    animation: loading 8s infinite linear;
  }
}

@keyframes loading {
  0% {
    width: 0;
  }

  100% {
    width: 100%;
  }
}


/* АНИМИРОВАННЫЕ КНОПКИ С ГРАДИЕНТОМ. https://www.youtube.com/watch?v=TfziVoVo-94&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=11 */


.wrapper11 {
  margin: 0;
  padding: 0;
  font-family: 'Poppins', sans-serif;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background-color: #373737;
  flex-direction: column;
}

.container11 {
  width: 100%;
  display: flex;
  justify-content: space-around;
}

.btn {
  min-width: 200px;
  border: none;
  cursor: pointer;
  letter-spacing: 1px;
  color: #fff;
  text-transform: uppercase;
  text-shadow: 0 1px 2px #000;
  padding: 20px;
  border-radius: 15px;
  background-size: 220%;
  box-shadow: 0 5px 5px -5px #010101;
  transition: .5s ease;

  &-1 {
    background-image: linear-gradient(45deg, #ed1e79, #662d8c, #ed1e79);
  }

  &-2 {
    background-image: linear-gradient(45deg, #63e2ff, #d585ff, #63e2ff);
  }

  &-3 {
    background-image: linear-gradient(45deg, #fcee21, #009e00, #fcee21);
  }

  &-4 {
    background-image: linear-gradient(45deg, #fbb03b, #d4145a, #fbb03b);
  }

  &:hover {
    // Меняем положение фона для эффекта.
    background-position: right;
  }
}


/* КРУГОВАЯ ПОЛОСА ПРОГРЕССА. https://www.youtube.com/watch?v=hRYA1CXfwP4&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=12 */


// Объявляем переменную, которая будет содержать в себе свойства для центрирования.
%center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.wrapper12 {
  margin: 0;
  padding: 0;
  font-family: 'Poppins', sans-serif;
  @extend %center;
  min-height: 100vh;
  background: linear-gradient(45deg, #333333, #5a5454);
  display: flex;
  flex-direction: column;
}

.container12 {
  position: relative;
  width: 960px;
  display: flex;
  justify-content: space-around;

  .card12 {
    @extend %center;
    position: relative;
    width: 250px;
    height: 330px;
    border-radius: 10px;
    background: rgba(0, 0, 0, .5);
    cursor: pointer;
    text-align: center;
    overflow: hidden;
    transition: .5s ease;

    &:hover {
      transform: translatey(-15px);
      box-shadow: 0 15px 30px rgba(0, 0, 0, .5);

      .number {
        h2 {
          color: #fff;
          font-size: 50px;

          span {
            color: #fff;
          }
        }
      }

      h3 {
        color: #fff;
      }
    }

    // Вторая затемнённая половинка карточки
    &:before {
      content: '';
      position: absolute;
      top: 0;
      left: -50%;
      width: 100%;
      height: 100%;
      background: rgba(255, 255, 255, .03);
      // Свойство pointer-events: none нужно для того, чтобы курсор мыши был статичным.
      pointer-events: none;
    }
  }

  .percent {
    position: relative;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    box-shadow: inset 0 0 50px #000;
    background-color: #222;
    z-index: 1;

    h3 {
      margin-top: 16px;
      color: #777;
      font-size: 22px;
      transition: .5s ease;
    }

    .number {
      @extend %center;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 50%;

      h2 {
        color: #777;
        font-size: 44px;
        transition: .5s ease;

        span {
          color: #777;
          padding-left: 3px;
          font-size: 24px;
          transition: .5s ease;
        }
      }
    }

    h3 {
      margin-top: 16px;
      color: #777;
      font-size: 22px;
      transition: .5s ease;
    }
  }
}

// svg элемент и есть нашим кругом с процентами внутри
svg {
  position: relative;
  width: 150px;
  height: 150px;
  // Поварачиваем его немного для лучшего эффекта
  transform: rotate(-85deg);

  circle {
    width: 100%;
    height: 100%;
    fill: none;
    stroke: #191919;
    stroke-width: 10;
    // Свойство stroke-linecap: round делает так, чтобы концы круга были закруглённы.
    stroke-linecap: round;
    transform: translate(5px, 5px);

    &:nth-child(2) {
      /* Свойство stroke-dasharray нужно для пунктирной, чтобы определить длину штриха и пробела. 
      Т.к у нас одно значение, то оно применяется и к пробелу и к штриху. */
      stroke-dasharray: 440;
      // Свойство stroke-dashoffset нужно для того, чтобы сдвинуть stroke в какое либо направление.
      stroke-dashoffset: 440;
    }
  }
}

.card12 {
  &:nth-child(1) {
    svg {
      circle {
        &:nth-child(2) {
          stroke-dashoffset: calc(440 - (440 * 90) / 100);
          stroke: #63E2FF;
        }
      }
    }
  }

  &:nth-child(2) {
    svg {
      circle {
        &:nth-child(2) {
          stroke-dashoffset: calc(440 - (440 * 60) / 100);
          stroke: #D9E021;
        }
      }
    }
  }

  &:nth-child(3) {
    svg {
      circle {
        &:nth-child(2) {
          stroke-dashoffset: calc(440 - (440 * 40) / 100);
          stroke: #ED1E79;
        }
      }
    }
  }
}


/* ОРИГИНАЛЬНЫЙ ЭФФЕКТ ВРАЩЕНИЯ КАРТОЧКИ. https://www.youtube.com/watch?v=d1xGDF2ToEY&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=13 */


.wrapper13 {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
  min-height: 100vh;
  background: linear-gradient(45deg, #fca5f1, #b5ffff);
  font-family: 'Montserrat', sans-serif;
}

.card13 {
  width: 400px;
  height: 300px;
  border: 10px solid #f1f1f1;
  overflow: hidden;
  position: relative;
  text-align: center;
  box-shadow: -5px 5px 10px -5px #010101;

  .content {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 400px;
    height: 300px;
    position: absolute;
    overflow: hidden;
    top: 0;
    left: 0;
    background-color: rgba(0, 0, 0, .5);
    color: #fff;
    opacity: 0;
    transform: translate(400px, -100px) rotate(180deg);
    transition: .4s ease-in-out;
  }

  img {
    width: auto;
    height: 100%;
  }

  h2 {
    text-transform: uppercase;
    position: relative;
    top: -7%;
    letter-spacing: 1px;
    font-size: 16px;
    margin: 0;
    padding: 15px 10px;
    background-color: rgba(0, 0, 0, .8);
    transform: translatey(-100px);
    transition: .2s ease-in-out;
  }

  p {
    font-size: 14px;
    font-weight: 300;
    position: relative;
    right: 4%;
    padding: 0 10px;
    transform: translatex(300px) rotate(90deg);
    transition: .2s ease-in-out;
  }

  a {
    align-self: center;
    position: relative;
    bottom: 10%;
    right: 4.5%;
    display: inline-block;
    text-decoration: none;
    padding: 7px 15px;
    margin-bottom: 15px;
    border: 1px solid #fff;
    color: #fff;
    text-transform: uppercase;
    transform: translatey(-200px);
    transition: .2s ease-in-out;

    &:hover {
      background-color: rgba(255, 255, 255, .3);
    }
  }

  &:hover {
    .content {
      opacity: 1;
      transition-delay: 0s;
      transform: translate(0, 0);
    }

    h2 {
      transform: translatey(0);
      transition-delay: .5s;
    }

    p {
      transform: translatex(0) rotate(0);
      transition-delay: .4s;
    }

    a {
      transform: translatey(0);
    }
  }
}


/* АНИМИРОВАННЫЙ ЗАГРУЗЧИК PACMAN. https://www.youtube.com/watch?v=t8jMqkEzpKo&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=14 */


.wrapper14 {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #333;
}

.pacman {
  position: relative;
  width: 160px;
  height: 160px;

  // Псевдоэлемент before отвечает за верхнюю челюсть, а after за нижнюю.
  &:before,
  &:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 0;
    border: 80px solid #ffd000;
    border-radius: 50%;
    // Делаем правый кусок прозрачным, это будет являться ртом пакмана
    border-right: 80px solid transparent;
    animation: animate1 linear .5s infinite;
  }

  &:after {
    animation: animate2 linear .5s infinite;
  }

  div {
    background-color: #ffd000;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: -100px;
    opacity: 0;

    &:nth-child(1) {
      animation: ball 1s 1s infinite linear;
    }

    &:nth-child(2) {
      animation: ball 1s .5s infinite linear;
    }

    &:nth-child(3) {
      animation: ball 1s 0s infinite linear;
    }
  }
}

@keyframes animate1 {
  0% {
    transform: rotate(270deg);
  }

  50% {
    transform: rotate(360deg);
  }

  100% {
    transform: rotate(270deg);
  }
}

@keyframes animate2 {
  0% {
    transform: rotate(90deg);
  }

  50% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(90deg);
  }
}

@keyframes ball {

  20%,
  80% {
    opacity: 1;
  }

  // Значение translate перемещает элемент в горизонтальном и вертикальном направлениях. 
  100% {
    transform: translate(-120px, -50%);
  }
}


/* КРЕАТИВНЫЙ ОДНОСТРАНИЧНЫЙ СЛАЙДЕР. https://www.youtube.com/watch?v=sOsDBYOi74Q&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=15 */


$colors: #662d8c, #009245, #2e3192, #ed1c24;

.wrapper15 {
  height: 100vh;
  color: #fff;
  font-family: 'Sedgwick Ave', cursive;
  overflow: hidden;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  .caption {
    position: absolute;
    z-index: 2;
  }

  input {
    display: none;
  }

  /* Директива SCSS @for работает так, что сначала задаётся переменная (у нас - $i), 
  пишется ключевое слово "from" и после него - индекс элемента с которого начнётся цикл, 
  потом ключевое слово "through" и число до которого будет идти цикл (у нас это длина списка $colors). */
  @for $i from 1 through length($colors) {

    /* Все эти свойства применяются для всех section. 
    Чтобы использовать переменную нужно написать "#", потом фигурные скобки и название переменной. */
    input#section#{$i}:checked~nav label[for="section#{$i}"] {
      background-color: #fff;
    }

    input#section#{$i}:checked~section:nth-of-type(#{$i}) {
      transform: translateY(0);
      transition: .3s ease;
      transition-delay: .2s;
      z-index: 1;
    }
  }

  nav {
    position: absolute;
    right: 30px;
    z-index: 2;
    transform: translateY(-50%);
    top: 50%;

    label {
      display: block;
      width: 14px;
      height: 14px;
      margin: 12px 0;
      border: 2px solid #fff;
      border-radius: 50%;
      cursor: pointer;
      transition: .3s ease;

      &:hover {
        background-color: #fff;
      }
    }
  }

  section {
    position: absolute;
    right: 0;
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition-delay: .5s;
    transform: translateY(-100%);

    @for $i from 1 through 4 {
      &:nth-of-type(#{$i}) {
        // Значение "nth()" принимает список элементов и индекс элемента. Так, мы передаём наш список цветов и устанавливаем свой для каждой section.
        background-color: nth($colors, $i);
      }
    }

    h2 {
      font-size: 140px;
      text-align: center;
      letter-spacing: 5px;
      color: #fff;
    }
  }
}


/* ПАРАЛЛАКС ЭФФЕКТ. https://www.youtube.com/watch?v=QEGsNQosAt0&list=PLNkWIWHIRwMEosiVP_3B-h4fE7CIfZ7pI&index=16 */